@model projetmvcfinale.Models.CorrigeViewModel

@{
    ViewData["Title"] = "AjouterCorrige";
}

<h1>Ajouter un corrigé</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AjouterCorrige" asp-controller="Corrige" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CorrigeDocNom" class="control-label"></label>
                <input asp-for="CorrigeDocNom" class="form-control" />
                <span asp-validation-for="CorrigeDocNom" class="text-danger"></span>
            </div>
            @if(((ViewBag.Idexercice) as SelectList).Count() == 0)
            {
                <p style="color:red">Créez des exercices avant d'insérer des corrigés!</p>
            }
            <div class="form-group">
                <label asp-for="Idexercice" class="control-label"></label>
                <select asp-for="Idexercice" class="form-control" asp-items="ViewBag.Idexercice"></select>
            </div>
            <div class="form-group">
                <label asp-for="Lien" class="control-label"></label>
                <input asp-for="Lien" class="form-control" type="file" />
                <span asp-validation-for="Lien" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Ajouter" class="btn btn-info" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="ListeCorrige" class="btn btn-info">Retour à la liste</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
